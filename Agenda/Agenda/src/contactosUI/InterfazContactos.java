/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package contactosUI;

import contactos.Contactos;
import contactos.LecturaEscritura;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.io.Serializable;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Conti
 */
public class InterfazContactos extends javax.swing.JFrame{
    
    LecturaEscritura le =new LecturaEscritura();//instanciamos objeto para usar metodos de lectura/escritura
    DefaultListModel model;//para editar el modelo de la jList en la que apareceran los valores del arrayList 'listaContactos'
    DefaultTableModel tabla = new DefaultTableModel(); // instanciamos para el modelo tabla
    Contactos c=new Contactos();
    String ruta; 
    boolean g=true;//variable para comprobar si se ha guardado el fichero o no
    /**
     * Creates new form InterfazContactos
     */
    public InterfazContactos() throws IOException, ClassNotFoundException {
        //le.leeFichero();
        initComponents();
        inicializar_col();
        cerrar();
        //inicializamos los componentes como no editables hasta que el usuario pulse 'nueva lista'
        nombre.setEditable(false);
        apellidos.setEditable(false);
        dni.setEditable(false);
        edad.setEditable(false);
        mostrar.setEnabled(false);
        agregar.setEnabled(false);
        
        guardar.setEnabled(false);
        guardarComo.setEnabled(false);
        this.acercaDe.setVisible(false);
    }
        public void inicializar_col(){
        tabla.addColumn("DNI");
        tabla.addColumn("Nombre");
        tabla.addColumn("Apellidos");
        tabla.addColumn("Edad");
        }
    /**
     * metodo para darle formato a la lista
     */
    public void formatoLista(){
        this.model=new DefaultListModel();
        this.model.removeAllElements();
        for (Contactos cs: Contactos.listaContactos){
            model.addElement(cs);  
        }
        
        listaContactos.setModel(model);
        this.setVisible(true);
    }
    
    public void limpiarTabla() {
        int rows = tabla.getRowCount();

        for (int i = rows-1; i >= 0; i--) {
            tabla.removeRow(i);
        }
    }
     /**
     * metodo para darle formato a la tabla
     */
    public void formatoTabla(){
             
        limpiarTabla();

        jTTabla.setModel(tabla);
        for (Contactos cs: Contactos.listaContactos){
            Object[] aux = {cs.getDni(),cs.getNombre(),cs.getApellidos(),cs.getEdad()};
            tabla.addRow(aux);
        }
        
        jTTabla.setModel(tabla);
     
    }
        public void cerrar() {
        try {
            this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
            addWindowListener(new WindowAdapter() {
                public void windowClosing(WindowEvent e) {
                    if (g==false){
                         int v=JOptionPane.showConfirmDialog(null, "Hay informacion que no ha guardado, ¿Desea salir?", "Mensaje de confirmacion", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                    if (v==0){
                        dispose();
                    }
                    }else{
                        dispose();
        }
                }
            });
            this.setVisible(true);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        acercaDe = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        nombre = new javax.swing.JTextField();
        apellidos = new javax.swing.JTextField();
        agregar = new javax.swing.JButton();
        mostrar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaContactos = new javax.swing.JList<>();
        edad = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        dni = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTTabla = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        nuevaLista = new javax.swing.JMenuItem();
        abrir = new javax.swing.JMenuItem();
        guardar = new javax.swing.JMenuItem();
        guardarComo = new javax.swing.JMenuItem();
        salir = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("Programa basado en el almacenamiento en ficheros de \ndatos referentes a contactos introducidos por el \nusuario el cual también podrá visualizar dichos datos");
        jScrollPane1.setViewportView(jTextArea1);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/contactosUI/agenda.png"))); // NOI18N

        javax.swing.GroupLayout acercaDeLayout = new javax.swing.GroupLayout(acercaDe.getContentPane());
        acercaDe.getContentPane().setLayout(acercaDeLayout);
        acercaDeLayout.setHorizontalGroup(
            acercaDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(acercaDeLayout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addComponent(jLabel7)
                .addContainerGap(134, Short.MAX_VALUE))
            .addGroup(acercaDeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        acercaDeLayout.setVerticalGroup(
            acercaDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(acercaDeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jFormattedTextField1.setText("jFormattedTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nombre");

        jLabel2.setText("Apellidos");

        jLabel3.setText("DNI");

        jLabel4.setText("Edad");

        agregar.setText("Agregar");
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });

        mostrar.setText("Mostrar");
        mostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarActionPerformed(evt);
            }
        });

        listaContactos.setModel(new DefaultListModel());
        jScrollPane2.setViewportView(listaContactos);

        try {
            edad.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel5.setText("Lista Contactos");

        jTTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nombre", "Apellidos", "DNI", "Edad"
            }
        ));
        jScrollPane3.setViewportView(jTTabla);

        jMenu1.setText("Archivo");

        nuevaLista.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        nuevaLista.setText("Nueva Lista");
        nuevaLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevaListaActionPerformed(evt);
            }
        });
        jMenu1.add(nuevaLista);

        abrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        abrir.setText("Abrir");
        abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirActionPerformed(evt);
            }
        });
        jMenu1.add(abrir);

        guardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        guardar.setText("Guardar");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });
        jMenu1.add(guardar);

        guardarComo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        guardarComo.setText("Guardar como...");
        guardarComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarComoActionPerformed(evt);
            }
        });
        jMenu1.add(guardarComo);

        salir.setText("Salir");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });
        jMenu1.add(salir);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Otros");

        jMenuItem1.setText("Acerca de");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(agregar, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(35, 35, 35)
                                        .addComponent(edad, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(apellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel1))
                                    .addGap(20, 20, 20)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(dni, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(jLabel5)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(243, 243, 243)
                        .addComponent(mostrar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(agregar)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mostrar)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(apellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(edad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * metodo en el que se define lo que ocurre al pulsar el boton de nueva lista
     * @param evt 
     */
    private void nuevaListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevaListaActionPerformed
        // TODO add your handling code here:
        /*
        condicional para ver si se ha guardado el archivo antes de borrar los datos que hay en el
         */
        limpiarTabla();
        if (g==false){
            int v=JOptionPane.showConfirmDialog(null, "Hay informacion que no ha guardado, ¿Desea continuar?", "Mensaje de confirmacion", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (v==JOptionPane.YES_OPTION){
                nombre.setEditable(true);
                apellidos.setEditable(true);
                dni.setEditable(true);
                edad.setEditable(true);
                mostrar.setEnabled(true);
                agregar.setEnabled(true);
                guardarComo.setEnabled(true);
                Contactos.getContactos().clear(); 
                formatoLista();
            }
        }else{
            nombre.setEditable(true);
            apellidos.setEditable(true);
            dni.setEditable(true);
            edad.setEditable(true);
            mostrar.setEnabled(true);
            agregar.setEnabled(true);
            guardarComo.setEnabled(true);
            guardar.setEnabled(false);
            Contactos.getContactos().clear(); 
            formatoLista();
        }  
    }//GEN-LAST:event_nuevaListaActionPerformed
    /**
     * metodo en el que definimos lo que ocurre al pulsar el boton guardar como de la lista
     * @param evt 
     */
    private void guardarComoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarComoActionPerformed

        javax.swing.JFileChooser jF1= new javax.swing.JFileChooser();
        try{ 
            if(jF1.showSaveDialog(null)==jF1.APPROVE_OPTION){ 
                ruta = jF1.getSelectedFile().getAbsolutePath(); 
                le.guardarComo(ruta);
            } 
        }catch (Exception ex){ 
            ex.printStackTrace(); 
        }
        abrir.setEnabled(true);
        guardar.setEnabled(true);
        g=true;
    }//GEN-LAST:event_guardarComoActionPerformed
    
    /**
     * metodo en el que se define la funcion del boton agregar.
     * @param evt 
     */
    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
        // TODO add your handling code here:
     
        boolean b=true;    
        
        if (edad.getText().equalsIgnoreCase("  ")){
            b=false;
        }
        
        if (apellidos.getText().isEmpty()){
            b=false;
        }
        
        if (nombre.getText().isEmpty()){
            b=false;
        }
          
        if (b==true){
            Contactos c=new Contactos(nombre.getText(), apellidos.getText(), Integer.parseInt(edad.getText()), dni.getText());
            nombre.setText("");
            apellidos.setText("");
            edad.setText("");
            dni.setText("");
            g=false;
        }else{
            JOptionPane.showMessageDialog(this, "Ha introducido mal algun dato", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_agregarActionPerformed
    
    /**
     * metodo en el que definimos lo que ocurre al pulsar el boton guardar como de la lista
     * @param evt 
     */
    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        try {
            // TODO add your handling code here:
            le.guardarComo(ruta);
            
            Contactos.getContactos().clear();
            abrir.setEnabled(true);
            g=true;
        } catch (IOException ex) {
            Logger.getLogger(InterfazContactos.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_guardarActionPerformed
    
    /**
     * metodo en el cual definimos la funcion del boton mostrar del menu
     * @param evt 
     */
    private void mostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarActionPerformed
       
        formatoLista();
        formatoTabla();
       
    }//GEN-LAST:event_mostrarActionPerformed
    
    /**
     * metodo que define lo que ocurre al pulsar el boton de la lista
     * abrir
     * @param evt 
     */
    private void abrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirActionPerformed
        // TODO add your handling code here:
        Contactos.getContactos().clear();
        boolean s=true;
        nombre.setEditable(true);
        apellidos.setEditable(true);
        dni.setEditable(true);
        edad.setEditable(true);
        int c=0;
        
        javax.swing.JFileChooser jF1= new javax.swing.JFileChooser(); 
        try{ 
            if(jF1.showOpenDialog(null)==jF1.APPROVE_OPTION){ 
                ruta = jF1.getSelectedFile().getAbsolutePath(); 
                le.abrirFichero(ruta);
                s=false;
                c++;
            } 
        }catch (Exception ex){ 
            ex.printStackTrace(); 
        }
        if (c==0 && s==true){
            abrir.setEnabled(true);
            guardar.setEnabled(false);
            mostrar.setEnabled(false);
            agregar.setEnabled(false);
            guardarComo.setEnabled(false);
        }else{
            //abrir.setEnabled(false);
            guardar.setEnabled(true);
            mostrar.setEnabled(true);
            agregar.setEnabled(true);
            guardarComo.setEnabled(true);
            
        }    
       
    }//GEN-LAST:event_abrirActionPerformed
    /**
     * Metodo en el que se define lo que ocurre al pulsar al boton del
     * menu de la lista salir
     * @param evt 
     */
    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        // TODO add your handling code here:
        /*
        condicional para comprobar que se ha guardado el fichero antes de salir 
        de la aplicacion
        */
        if (g==false){
            int v=JOptionPane.showConfirmDialog(null, "Hay informacion que no ha guardado, ¿Desea salir?", "Mensaje de confirmacion", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (v==0){
                this.dispose();
            }
        }else{
            this.dispose();
        }
    }//GEN-LAST:event_salirActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        this.acercaDe.setVisible(true);
        this.acercaDe.setSize(400, 270);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazContactos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazContactos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazContactos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazContactos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new InterfazContactos().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(InterfazContactos.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(InterfazContactos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem abrir;
    private javax.swing.JDialog acercaDe;
    public javax.swing.JButton agregar;
    public javax.swing.JTextField apellidos;
    private javax.swing.JTextField dni;
    private javax.swing.JFormattedTextField edad;
    private javax.swing.JMenuItem guardar;
    private javax.swing.JMenuItem guardarComo;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTTabla;
    private javax.swing.JTextArea jTextArea1;
    public javax.swing.JList<String> listaContactos;
    public javax.swing.JButton mostrar;
    public javax.swing.JTextField nombre;
    private javax.swing.JMenuItem nuevaLista;
    private javax.swing.JMenuItem salir;
    // End of variables declaration//GEN-END:variables
}
